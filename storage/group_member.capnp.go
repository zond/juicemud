// Code generated by capnpc-go. DO NOT EDIT.

package storage

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

type GroupMember capnp.Struct

// GroupMember_TypeID is the unique identifier for the type GroupMember.
const GroupMember_TypeID = 0xb707184bee0895f5

func NewGroupMember(s *capnp.Segment) (GroupMember, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GroupMember(st), err
}

func NewRootGroupMember(s *capnp.Segment) (GroupMember, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GroupMember(st), err
}

func ReadRootGroupMember(msg *capnp.Message) (GroupMember, error) {
	root, err := msg.Root()
	return GroupMember(root.Struct()), err
}

func (s GroupMember) String() string {
	str, _ := text.Marshal(0xb707184bee0895f5, capnp.Struct(s))
	return str
}

func (s GroupMember) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GroupMember) DecodeFromPtr(p capnp.Ptr) GroupMember {
	return GroupMember(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GroupMember) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GroupMember) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GroupMember) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GroupMember) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GroupMember) User() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s GroupMember) HasUser() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GroupMember) UserBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s GroupMember) SetUser(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s GroupMember) Group() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s GroupMember) HasGroup() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GroupMember) GroupBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s GroupMember) SetGroup(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// GroupMember_List is a list of GroupMember.
type GroupMember_List = capnp.StructList[GroupMember]

// NewGroupMember creates a new list of GroupMember.
func NewGroupMember_List(s *capnp.Segment, sz int32) (GroupMember_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[GroupMember](l), err
}

// GroupMember_Future is a wrapper for a GroupMember promised by a client call.
type GroupMember_Future struct{ *capnp.Future }

func (f GroupMember_Future) Struct() (GroupMember, error) {
	p, err := f.Future.Ptr()
	return GroupMember(p.Struct()), err
}
